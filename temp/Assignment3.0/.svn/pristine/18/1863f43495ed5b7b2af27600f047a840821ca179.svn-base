import xmltodict
import json
from collections import defaultdict

class xml_obj(object):

    def __init__(self, xml_file):
        self._dir = defaultdict(set)
        self._projects = {}
        # self._tree = {}

        with open(xml_file) as fd:
            doc = xmltodict.parse(fd.read())

        # print(json.dumps(doc, indent=4))
        for entry in doc['lists']['list']['entry']:
            if entry["@kind"] == "dir":
                self._dir[entry['name']].add(None)
                full_dir = entry["name"].split('/')
                if len(full_dir) == 1:
                    self._projects[entry["name"]] = "this is a project"
                if len(full_dir) > 1:
                    sep = "/"
                    path = sep.join(full_dir[:-1])
                    # print(path)
                    # self._tree[path].add()
                    self._dir[path].add((entry["name"], "dir"))

            if entry["@kind"] == "file":
                full_dir = entry["name"].split('/')
                sep = "/"
                path = sep.join(full_dir[:-1])
                self._dir[path].add((full_dir[len(full_dir)-1], "file"))

        # print(self._dir)

    def get_projects(self):
        return self._projects

    def get_files(self, key):
        result = []
        for file in self._dir[key]:
            if file is not None and file[1] == "file":
                result.append(file[0])
        return result

    def get_dirs(self, key):
        result = []
        for dir in self._dir[key]:
            if dir is not None and dir[1] == "dir":
                result.append(dir[0])
        return result

